// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("@glennsl/bs-jest/src/jest.bs.js");
var OSeq = require("../src/OSeq.bs.js");
var Belt_List = require("bs-platform/lib/js/belt_List.js");

var partial_arg = OSeq.iterate(0, (function (prim) {
        return prim + 1 | 0;
      }));

var iterate = OSeq.to_list(function (param) {
      return OSeq.take(10, partial_arg, param);
    });

console.log(Belt_List.toArray(iterate));

function aux(n) {
  return OSeq.Generator.$great$great$eq(OSeq.Generator.$$yield(n), (function (param) {
                return aux(n + 1 | 0);
              }));
}

var naturals = OSeq.Generator.run(aux(0));

function naturals$prime(param) {
  return OSeq.unfold((function (n) {
                return [
                        n,
                        n + 1 | 0
                      ];
              }), 0, param);
}

console.log(OSeq.to_array(function (param) {
          return OSeq.take(100, naturals$prime, param);
        }));

console.log(Belt_List.toArray(OSeq.to_list(function (param) {
              return OSeq.take(100, naturals, param);
            })));

Jest.describe("decoders-bs decode", (function (param) {
        return Jest.test("string", (function (param) {
                      var n = {
                        contents: 0
                      };
                      var g = function (param) {
                        return n.contents = n.contents + 1 | 0, n.contents;
                      };
                      var l = OSeq.of_gen(g);
                      return Jest.Expect.toEqual(OSeq.to_list(function (param) {
                                      return OSeq.take(10, l, param);
                                    }), Jest.Expect.expect({
                                      hd: 1,
                                      tl: {
                                        hd: 2,
                                        tl: {
                                          hd: 3,
                                          tl: {
                                            hd: 4,
                                            tl: {
                                              hd: 5,
                                              tl: {
                                                hd: 6,
                                                tl: {
                                                  hd: 7,
                                                  tl: {
                                                    hd: 8,
                                                    tl: {
                                                      hd: 9,
                                                      tl: {
                                                        hd: 10,
                                                        tl: /* [] */0
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }));
                    }));
      }));

var toArray = Belt_List.toArray;

exports.iterate = iterate;
exports.toArray = toArray;
/* iterate Not a pure module */
